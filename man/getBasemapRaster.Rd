% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getBasemapRaster.r
\name{getBasemapRaster}
\alias{getBasemapRaster}
\title{getBasemapRaster}
\usage{
getBasemapRaster(xmin, xmax, ymin, ymax, map.types = "Esri.WorldPhysical",
  directory = ".", filename = "basemap", zoom = 4, plotme = TRUE, ...)
}
\arguments{
\item{map.types}{Character specification for the base maps. see http://leaflet-extras.github.io/leaflet-providers/preview/ for available options. Favorites include: \code{Esri.WorldPhysical} (default), \code{Esri.WorldTerrain}, \code{Esri.NatGeoWorldMap}}

\item{directory}{directory to save the htlm and png files}

\item{filename}{name of png and html files}

\item{zoom}{a resolution parameter. The default 4 gives approximately a 2000 x 2000 raster, 8 gives a 4000 x 4000, etc.}

\item{plotme}{whether or not to plot the raster with \code{\link{plotRGB}}. Note that high resolution rasters are reduced in rendering within R by default ... this can be modified with \code{\link{plotRGB}} options.}

\item{...}{Additional paramters to pass to \code{\link{mapview}}}

\item{{xmin, }{ymin, xmax, ymax} Limits (in longitude and latitude) of desired map raster.}
}
\value{
An RGB raster, i.e. one with three levels for each of the colors
}
\description{
This function obtains an RGB raster from any of the available base maps in the (incredible!) open source leaflet package.  It is meant to replace - in a way - the \code{\link{ggmap}} function, which now requires an API key with Google.  It is in some ways more flexible: you can set the lat and long limits strictly, it returns a projected raster which can be reprojected to any other resolution, and it can access any of the remarkable diversity of high quality mapping option at:  http://leaflet-extras.github.io/leaflet-providers/preview/.  Note that it creates a "png" and "html" and places it in a given directory, and does not delete them.
}
\examples{
# SE Alaska
SEalaska.topo <- getBasemapRaster(-138,-130, 56, 60, "OpenTopoMap")
# for a ggPlot use this function (from RStoolbox): 
ggRGB(SEalaska.topo, 1, 2, 3, coord_equal = FALSE)
# DC map, high resolution
dc.natgeo <- getBasemapRaster(-77.5,-76.5, 38.5, 39.25, "Esri.NatGeoWorldMap", zoom = 8, plotme = FALSE)
ggRGB(dc.topo, 1, 2, 3, coord_equal = FALSE)
}
